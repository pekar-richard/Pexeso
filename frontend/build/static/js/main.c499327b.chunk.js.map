{"version":3,"sources":["ItemDetail.module.css","ItemDetail.js","Nav.js","Item.js","config.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ItemDetail","wort","schlussel","WortClick","id","isBoxklicked","className","style","background_green","background_white","onClick","value","Nav","WortClick2","Scroolbarfunc","WortClickDESKEN","type","min","max","step","defaultValue","onChange","for","prvakliknuta","druhakliknuta","Item","useEffect","fetchItem","useState","wortsallrandom","setWortsallrandom","scroolbar","setScroolbar","jazyk","setSprache","handleSpracheChange","event","a","target","fetch","json","items","console","log","random_item","worts","c","i","length","push","key","name","Boxklicked","wortde","n","shuffled","sort","Math","random","selected","slice","datas","map","data","filter","item","setTimeout","datass","ev","bind","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c499327b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background_green\":\"ItemDetail_background_green__33fxA\",\"background_white\":\"ItemDetail_background_white__1zocJ\",\"recipes\":\"ItemDetail_recipes__2ROYq\"};","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport style from \"./ItemDetail.module.css\";\r\n\r\nfunction ItemDetail({ wort, schlussel, WortClick, id, isBoxklicked }) {\r\n  return (\r\n    <div>\r\n      <div\r\n        className={\r\n          isBoxklicked ? style.background_green : style.background_white\r\n        }\r\n        id={id}\r\n        onClick={WortClick}\r\n        value={schlussel}\r\n      >\r\n        {wort}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemDetail;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default function Nav({ WortClick2, Scroolbarfunc, WortClickDESKEN }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <nav className=\"navbar navbar-dark fixed-top bg-danger text-white\">\r\n          <div className=\"titel\">Pexeso für alle</div>\r\n          <div className=\"button-div\">\r\n            <a className=\"button1\" onClick={WortClick2}>\r\n              Nächster\r\n            </a>\r\n            <a className=\"button2\" onClick={WortClickDESKEN} id=\"DESK\">\r\n              DE + SK\r\n            </a>\r\n            <a className=\"button3\" onClick={WortClickDESKEN} id=\"DEEN\">\r\n              DE + EN\r\n            </a>\r\n            <a className=\"button4\" onClick={WortClickDESKEN} id=\"DEENSK\">\r\n              DE + EN + SK\r\n            </a>\r\n          </div>\r\n          <input\r\n            type=\"range\"\r\n            className=\"custom-range\"\r\n            min=\"10\"\r\n            max=\"100\"\r\n            step=\"1\"\r\n            defaultValue=\"20\"\r\n            id=\"customRange2\"\r\n            onChange={Scroolbarfunc}\r\n          />\r\n          <label for=\"customRange1\">die Menge</label>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { API_ENDPOINT } from \"./config\";\r\nimport ItemDetail from \"./ItemDetail\";\r\nimport Nav from \"./Nav\";\r\n\r\nvar prvakliknuta = null;\r\nvar druhakliknuta = null;\r\nvar Boxklicked = false;\r\n\r\nfunction Item() {\r\n  useEffect(() => {\r\n    fetchItem();\r\n  }, []);\r\n\r\n  function handleChange(event) {\r\n    setScroolbar(event.target.value);\r\n    fetchItem(jazyk);\r\n  }\r\n\r\n  const [wortsallrandom, setWortsallrandom] = useState([]);\r\n  const [scroolbar, setScroolbar] = useState(20);\r\n  const [jazyk, setSprache] = useState(\"sk\");\r\n\r\n  const handleSpracheChange = async (event) => {\r\n    switch (event.target.id) {\r\n      case \"DESK\":\r\n        fetchItem(\"sk\");\r\n        break;\r\n      case \"DEEN\":\r\n        fetchItem(\"en\");\r\n        break;\r\n      case \"DEENSK\":\r\n        fetchItem(\"sken\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  const fetchItem = async (jazyk = \"sk\") => {\r\n    const fetchItem = await fetch(`${API_ENDPOINT}/api/pexeso/all/${jazyk}`);\r\n    let items = await fetchItem.json();\r\n    console.log(\"Fecovacia funkcia mi vratila\", jazyk);\r\n    items = random_item(items, scroolbar);\r\n\r\n    let worts = [];\r\n    var i;\r\n    var c = 0;\r\n    for (i = 0; i < items.length; i++) {\r\n      worts.push({\r\n        key: items[i].id,\r\n        name: items[i].wort,\r\n        id: c++,\r\n        Boxklicked: false,\r\n      });\r\n      worts.push({\r\n        key: items[i].id,\r\n        name: items[i].wortde,\r\n        id: c++,\r\n        Boxklicked: false,\r\n      });\r\n    }\r\n\r\n    setSprache(jazyk);\r\n    setWortsallrandom(random_item(worts, worts.length));\r\n  };\r\n\r\n  function random_item(items, n = 10) {\r\n    const shuffled = items.sort(() => 0.5 - Math.random());\r\n\r\n    let selected = shuffled.slice(0, n);\r\n\r\n    return selected;\r\n  }\r\n\r\n  function WortClick(wort) {\r\n    if (prvakliknuta === wort) {\r\n      var datas = wortsallrandom.map((worts) => {\r\n        if (worts.id === prvakliknuta.id) {\r\n          worts.Boxklicked = false;\r\n        }\r\n        return worts;\r\n      });\r\n\r\n      setWortsallrandom(datas);\r\n\r\n      prvakliknuta = null;\r\n      return;\r\n    }\r\n\r\n    if (prvakliknuta !== null && druhakliknuta === null) {\r\n      druhakliknuta = wort;\r\n      var datas = wortsallrandom.map((worts) => {\r\n        if (worts.id === druhakliknuta.id) {\r\n          worts.Boxklicked = true;\r\n        }\r\n        return worts;\r\n      });\r\n\r\n      setWortsallrandom(datas);\r\n    }\r\n\r\n    if (prvakliknuta === null) {\r\n      prvakliknuta = wort;\r\n\r\n      var datas = wortsallrandom.map((worts) => {\r\n        if (worts.id === prvakliknuta.id) {\r\n          worts.Boxklicked = true;\r\n        }\r\n        return worts;\r\n      });\r\n\r\n      setWortsallrandom(datas);\r\n    }\r\n\r\n    if (\r\n      prvakliknuta != null &&\r\n      druhakliknuta != null &&\r\n      prvakliknuta.key === druhakliknuta.key\r\n    ) {\r\n      var datas = wortsallrandom.map((worts) => {\r\n        if (worts.id === druhakliknuta.id) {\r\n          worts.Boxklicked = true;\r\n        }\r\n        return worts;\r\n      });\r\n\r\n      setWortsallrandom(datas);\r\n\r\n      var data = wortsallrandom.filter(function (item) {\r\n        return item.key !== prvakliknuta.key && item.key !== druhakliknuta.key;\r\n      });\r\n      prvakliknuta = null;\r\n      druhakliknuta = null;\r\n\r\n      setTimeout(() => {\r\n        setWortsallrandom(data);\r\n      }, 250);\r\n    }\r\n\r\n    if (\r\n      prvakliknuta != null &&\r\n      druhakliknuta != null &&\r\n      prvakliknuta.key !== druhakliknuta.key\r\n    ) {\r\n      var datass = wortsallrandom.map((worts) => {\r\n        if (worts.id === prvakliknuta.id) {\r\n          worts.Boxklicked = false;\r\n        }\r\n\r\n        if (worts.id === druhakliknuta.id) {\r\n          worts.Boxklicked = true;\r\n        }\r\n\r\n        return worts;\r\n      });\r\n\r\n      setWortsallrandom(datass);\r\n\r\n      prvakliknuta = wort;\r\n      druhakliknuta = null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"block\">\r\n      <Nav\r\n        WortClick2={(ev) => fetchItem(jazyk)}\r\n        Scroolbarfunc={handleChange}\r\n        WortClickDESKEN={handleSpracheChange}\r\n      />\r\n      {wortsallrandom.map((wort) => {\r\n        return (\r\n          <div key={wort.id} className=\"recipes\">\r\n            <ItemDetail\r\n              wort={wort.name}\r\n              schlussel={wort.key}\r\n              id={wort.id}\r\n              WortClick={WortClick.bind(null, wort)}\r\n              isBoxklicked={wort.Boxklicked}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","export const API_ENDPOINT = \"http://localhost:8080/\";\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Item from \"./Item\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={Item} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}